# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Main.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import qtmodern.styles
import qtmodern.windows
import requests
from bs4 import BeautifulSoup
import json
import data

from PyQt5 import QtCore, QtGui, QtWidgets

REQ = data.Req()

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1024, 600)
        MainWindow.setMinimumSize(QtCore.QSize(1024, 600))
        MainWindow.setMaximumSize(QtCore.QSize(1024, 600))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.GroupBox_search_environment = QtWidgets.QGroupBox(self.centralwidget)
        self.GroupBox_search_environment.setGeometry(QtCore.QRect(10, 10, 1001, 101))
        self.GroupBox_search_environment.setObjectName("GroupBox_search_environment")
        self.Label_season = QtWidgets.QLabel(self.GroupBox_search_environment)
        self.Label_season.setGeometry(QtCore.QRect(15, 40, 51, 21))
        self.Label_season.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_season.setObjectName("Label_season")
        self.ComboBox_season = QtWidgets.QComboBox(self.GroupBox_search_environment)
        self.ComboBox_season.setGeometry(QtCore.QRect(80, 40, 191, 22))
        self.ComboBox_season.setObjectName("ComboBox_season")
        self.Button_season_add = QtWidgets.QPushButton(self.GroupBox_search_environment)
        self.Button_season_add.setGeometry(QtCore.QRect(280, 40, 31, 23))
        self.Button_season_add.setObjectName("Button_season_add")
        self.Button_league_add = QtWidgets.QPushButton(self.GroupBox_search_environment)
        self.Button_league_add.setGeometry(QtCore.QRect(500, 40, 31, 23))
        self.Button_league_add.setObjectName("Button_league_add")
        self.Label_league = QtWidgets.QLabel(self.GroupBox_search_environment)
        self.Label_league.setGeometry(QtCore.QRect(335, 40, 31, 21))
        self.Label_league.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_league.setObjectName("Label_league")
        self.ComboBox_league = QtWidgets.QComboBox(self.GroupBox_search_environment)
        self.ComboBox_league.setGeometry(QtCore.QRect(380, 40, 111, 22))
        self.ComboBox_league.setObjectName("ComboBox_league")
        self.line = QtWidgets.QFrame(self.GroupBox_search_environment)
        self.line.setGeometry(QtCore.QRect(310, 40, 20, 21))
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.Button_position_add = QtWidgets.QPushButton(self.GroupBox_search_environment)
        self.Button_position_add.setGeometry(QtCore.QRect(720, 40, 31, 23))
        self.Button_position_add.setObjectName("Button_position_add")
        self.Label_position = QtWidgets.QLabel(self.GroupBox_search_environment)
        self.Label_position.setGeometry(QtCore.QRect(555, 40, 51, 21))
        self.Label_position.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_position.setObjectName("Label_position")
        self.line_2 = QtWidgets.QFrame(self.GroupBox_search_environment)
        self.line_2.setGeometry(QtCore.QRect(530, 40, 20, 21))
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.ComboBox_position = QtWidgets.QComboBox(self.GroupBox_search_environment)
        self.ComboBox_position.setGeometry(QtCore.QRect(620, 40, 91, 22))
        self.ComboBox_position.setObjectName("ComboBox_position")
        self.Button_ovr_add = QtWidgets.QPushButton(self.GroupBox_search_environment)
        self.Button_ovr_add.setGeometry(QtCore.QRect(940, 40, 31, 23))
        self.Button_ovr_add.setObjectName("Button_ovr_add")
        self.SpinBox_ovr = QtWidgets.QSpinBox(self.GroupBox_search_environment)
        self.SpinBox_ovr.setGeometry(QtCore.QRect(840, 40, 91, 22))
        self.SpinBox_ovr.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.SpinBox_ovr.setObjectName("SpinBox_ovr")
        self.line_3 = QtWidgets.QFrame(self.GroupBox_search_environment)
        self.line_3.setGeometry(QtCore.QRect(750, 40, 20, 21))
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.Label_ovr = QtWidgets.QLabel(self.GroupBox_search_environment)
        self.Label_ovr.setGeometry(QtCore.QRect(775, 40, 51, 21))
        self.Label_ovr.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_ovr.setObjectName("Label_ovr")
        self.line_4 = QtWidgets.QFrame(self.GroupBox_search_environment)
        self.line_4.setGeometry(QtCore.QRect(310, 70, 20, 21))
        self.line_4.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.Label_bp = QtWidgets.QLabel(self.GroupBox_search_environment)
        self.Label_bp.setGeometry(QtCore.QRect(15, 70, 61, 21))
        self.Label_bp.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_bp.setObjectName("Label_bp")
        self.ComboBox_bp = QtWidgets.QComboBox(self.GroupBox_search_environment)
        self.ComboBox_bp.setGeometry(QtCore.QRect(80, 70, 101, 22))
        self.ComboBox_bp.setObjectName("ComboBox_bp")
        self.Label_bp_price_min = QtWidgets.QLabel(self.GroupBox_search_environment)
        self.Label_bp_price_min.setGeometry(QtCore.QRect(320, 70, 61, 21))
        self.Label_bp_price_min.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_bp_price_min.setObjectName("Label_bp_price_min")
        self.SpinBox_bp_price_min = QtWidgets.QSpinBox(self.GroupBox_search_environment)
        self.SpinBox_bp_price_min.setGeometry(QtCore.QRect(380, 70, 111, 22))
        self.SpinBox_bp_price_min.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.SpinBox_bp_price_min.setObjectName("SpinBox_bp_price_min")
        self.line_5 = QtWidgets.QFrame(self.GroupBox_search_environment)
        self.line_5.setGeometry(QtCore.QRect(530, 70, 20, 21))
        self.line_5.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.SpinBox_bp_bu = QtWidgets.QSpinBox(self.GroupBox_search_environment)
        self.SpinBox_bp_bu.setGeometry(QtCore.QRect(620, 70, 41, 22))
        self.SpinBox_bp_bu.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.SpinBox_bp_bu.setObjectName("SpinBox_bp_bu")
        self.Label_bp_bu = QtWidgets.QLabel(self.GroupBox_search_environment)
        self.Label_bp_bu.setGeometry(QtCore.QRect(550, 70, 61, 21))
        self.Label_bp_bu.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_bp_bu.setObjectName("Label_bp_bu")
        self.ListWidget_season = QtWidgets.QListWidget(self.centralwidget)
        self.ListWidget_season.setGeometry(QtCore.QRect(20, 120, 191, 101))
        self.ListWidget_season.setObjectName("ListWidget_season")
        self.ListWidget_league = QtWidgets.QListWidget(self.centralwidget)
        self.ListWidget_league.setGeometry(QtCore.QRect(230, 120, 191, 101))
        self.ListWidget_league.setObjectName("ListWidget_league")
        self.ListWidget_position = QtWidgets.QListWidget(self.centralwidget)
        self.ListWidget_position.setGeometry(QtCore.QRect(440, 120, 191, 101))
        self.ListWidget_position.setObjectName("ListWidget_position")
        self.ListWidget_ovr = QtWidgets.QListWidget(self.centralwidget)
        self.ListWidget_ovr.setGeometry(QtCore.QRect(650, 120, 191, 101))
        self.ListWidget_ovr.setObjectName("ListWidget_ovr")
        self.Button_season_del = QtWidgets.QPushButton(self.centralwidget)
        self.Button_season_del.setGeometry(QtCore.QRect(20, 220, 191, 23))
        self.Button_season_del.setObjectName("Button_season_del")
        self.Button_league_del = QtWidgets.QPushButton(self.centralwidget)
        self.Button_league_del.setGeometry(QtCore.QRect(230, 220, 191, 23))
        self.Button_league_del.setObjectName("Button_league_del")
        self.Button_position_del = QtWidgets.QPushButton(self.centralwidget)
        self.Button_position_del.setGeometry(QtCore.QRect(440, 220, 191, 23))
        self.Button_position_del.setObjectName("Button_position_del")
        self.Button_ovr_del = QtWidgets.QPushButton(self.centralwidget)
        self.Button_ovr_del.setGeometry(QtCore.QRect(650, 220, 191, 23))
        self.Button_ovr_del.setObjectName("Button_ovr_del")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(90, 260, 821, 16))
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.TableWidget_search_result = QtWidgets.QTableWidget(self.centralwidget)
        self.TableWidget_search_result.setGeometry(QtCore.QRect(10, 310, 1001, 261))
        self.TableWidget_search_result.setObjectName("TableWidget_search_result")
        self.TableWidget_search_result.setColumnCount(12)
        item = QtWidgets.QTableWidgetItem()
        self.TableWidget_search_result.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableWidget_search_result.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableWidget_search_result.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableWidget_search_result.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableWidget_search_result.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableWidget_search_result.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableWidget_search_result.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableWidget_search_result.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableWidget_search_result.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableWidget_search_result.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableWidget_search_result.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableWidget_search_result.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableWidget_search_result.setHorizontalHeaderItem(11, item)
        
        self.Button_search = QtWidgets.QPushButton(self.centralwidget)
        self.Button_search.setGeometry(QtCore.QRect(860, 120, 151, 121))
        self.Button_search.setStyleSheet("color: Green")
        self.Button_search.setObjectName("Button_search")
        self.Button_excel = QtWidgets.QPushButton(self.centralwidget)
        self.Button_excel.setGeometry(QtCore.QRect(930, 280, 75, 23))
        self.Button_excel.setStyleSheet("color: #0080FF\n""")
        self.Button_excel.setObjectName("Button_excel")
        self.lcdNumber_search_total = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_search_total.setGeometry(QtCore.QRect(800, 280, 121, 23))
        self.lcdNumber_search_total.setObjectName("lcdNumber_search_total")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Transfer Market Infomation - by. Hanbeon"))
        self.GroupBox_search_environment.setTitle(_translate("MainWindow", "Search Environment"))
        self.Label_season.setText(_translate("MainWindow", "시즌"))
        self.Button_season_add.setText(_translate("MainWindow", "Add"))
        self.Button_league_add.setText(_translate("MainWindow", "Add"))
        self.Label_league.setText(_translate("MainWindow", "리그"))
        self.Button_position_add.setText(_translate("MainWindow", "Add"))
        self.Label_position.setText(_translate("MainWindow", "포지션"))
        self.Button_ovr_add.setText(_translate("MainWindow", "Add"))
        self.Label_ovr.setText(_translate("MainWindow", "능력치"))
        self.Label_bp.setText(_translate("MainWindow", "BP 등급"))
        self.Label_bp_price_min.setText(_translate("MainWindow", "최소 금액"))
        self.Label_bp_bu.setText(_translate("MainWindow", "최소 배율"))
        self.Button_season_del.setText(_translate("MainWindow", "Selected Delete"))
        self.Button_league_del.setText(_translate("MainWindow", "Selected Delete"))
        self.Button_position_del.setText(_translate("MainWindow", "Selected Delete"))
        self.Button_ovr_del.setText(_translate("MainWindow", "Selected Delete"))
        item = self.TableWidget_search_result.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Season"))
        item = self.TableWidget_search_result.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Name"))
        item = self.TableWidget_search_result.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Position"))
        item = self.TableWidget_search_result.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Ovr"))
        item = self.TableWidget_search_result.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Bp.1"))
        item = self.TableWidget_search_result.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Bp.2"))
        item = self.TableWidget_search_result.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Bp.3"))
        item = self.TableWidget_search_result.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "Bp.4"))
        item = self.TableWidget_search_result.horizontalHeaderItem(8)
        item.setText(_translate("MainWindow", "Bp.5"))
        item = self.TableWidget_search_result.horizontalHeaderItem(9)
        item.setText(_translate("MainWindow", "Bp.6"))
        item = self.TableWidget_search_result.horizontalHeaderItem(10)
        item.setText(_translate("MainWindow", "Bp.7"))
        item = self.TableWidget_search_result.horizontalHeaderItem(11)
        item.setText(_translate("MainWindow", "Bp.8"))
        __sortingEnabled = self.TableWidget_search_result.isSortingEnabled()
        self.TableWidget_search_result.setSortingEnabled(False)
  
        self.TableWidget_search_result.setSortingEnabled(__sortingEnabled)
        self.Button_search.setText(_translate("MainWindow", "SEARCH"))
        self.Button_excel.setText(_translate("MainWindow", "Excel"))

        self.get_cmm_code()
        self.event_handler()

    def event_handler(self):
        self.Button_season_add.clicked.connect(self.clicked_season_add); self.Button_season_del.clicked.connect(self.clicked_season_del)
        self.Button_league_add.clicked.connect(self.clicked_league_add); self.Button_league_del.clicked.connect(self.clicked_league_del)
        self.Button_ovr_add.clicked.connect(self.clicked_ovr_add); self.Button_ovr_del.clicked.connect(self.clicked_ovr_del)
        self.Button_search.clicked.connect(self.crawler)

    def clicked_season_add(self): self.listWidget_event('season', 'add')
    def clicked_season_del(self): self.listWidget_event('season', 'del')

    def clicked_league_add(self): self.listWidget_event('league', 'add')
    def clicked_league_del(self): self.listWidget_event('league', 'del')

    def clicked_ovr_add(self): self.listWidget_event('ovr', 'add')
    def clicked_ovr_del(self): self.listWidget_event('ovr', 'del')

    def listWidget_event(self, list_type, run):
        dupl_flag = False
        if   list_type == 'season'  : 
            if run == 'add':
                list_count = self.ListWidget_season.count()
                for i in range(list_count):
                    if self.ListWidget_season.item(i).data(QtCore.Qt.UserRole) == self.ComboBox_season.currentData() :
                        dupl_flag = True
                        break
                if dupl_flag is not True:
                    list_item = QtWidgets.QListWidgetItem()
                    list_item.setData(QtCore.Qt.UserRole , self.ComboBox_season.currentData() )
                    list_item.setText( self.ComboBox_season.currentText() )
                    self.ListWidget_season.addItem(list_item)
            else:
                if self.ListWidget_season.currentItem():
                    self.ListWidget_season.takeItem(self.ListWidget_season.currentRow())
                
        elif list_type == 'league'  :
            if run == 'add':
                list_count = self.ListWidget_league.count()
                for i in range(list_count):
                    if self.ListWidget_league.item(i).data(QtCore.Qt.UserRole) == self.ComboBox_league.currentData() :
                        dupl_flag = True
                        break
                if dupl_flag is not True:
                    list_item = QtWidgets.QListWidgetItem()
                    list_item.setData(QtCore.Qt.UserRole , self.ComboBox_league.currentData() )
                    list_item.setText( self.ComboBox_league.currentText() )
                    self.ListWidget_league.addItem(list_item)
            else:
                if self.ListWidget_league.currentItem():
                    self.ListWidget_league.takeItem(self.ListWidget_league.currentRow())
        elif list_type == 'position': print("Position")

        elif list_type == 'ovr'     :
            if run == 'add':
                list_count = self.ListWidget_ovr.count()
                for i in range(list_count):
                    if self.ListWidget_ovr.item(i).data(QtCore.Qt.UserRole) == self.SpinBox_ovr.value() :
                        dupl_flag = True
                        break
                if dupl_flag is not True:
                    list_item = QtWidgets.QListWidgetItem()
                    list_item.setData(QtCore.Qt.UserRole , self.SpinBox_ovr.value() )
                    list_item.setText( str(self.SpinBox_ovr.value()) )
                    self.ListWidget_ovr.addItem(list_item)
            else:
                if self.ListWidget_ovr.currentItem():
                    self.ListWidget_ovr.takeItem(self.ListWidget_ovr.currentRow())


    def crawler(self):
        totalCount = 0
        for i in range(self.ListWidget_season.count()):
            for j in range(self.ListWidget_league.count()):
                for q in range(self.ListWidget_ovr.count()):
                    url = "http://fifaonline4.nexon.com/datacenter/PlayerList?n4OvrMin="+str(self.ListWidget_ovr.item(q).data(QtCore.Qt.UserRole))+"&n4OvrMax="+str(self.ListWidget_ovr.item(q).data(QtCore.Qt.UserRole))+"&strSeason=%2C"+str(self.ListWidget_season.item(i).data(QtCore.Qt.UserRole))+"%2C&n4LeagueId="+str(self.ListWidget_league.item(j).data(QtCore.Qt.UserRole))
                    html = requests.post(url)
                    soup = BeautifulSoup( html.text, 'html.parser')
                    t = soup.select(".tr")
                    for tr in t :
                        if tr.find('div', {'class':'name'}) : 
                            playerName = tr.find('div', {'class':'name'}).text
                            bp_1=tr.find('span', {'class':'span_bp1'}).text
                            bp_2=tr.find('span', {'class':'span_bp2'}).text
                            bp_3=tr.find('span', {'class':'span_bp3'}).text
                            bp_4=tr.find('span', {'class':'span_bp4'}).text
                            bp_5=tr.find('span', {'class':'span_bp5'}).text
                            bp_6=tr.find('span', {'class':'span_bp6'}).text
                            bp_7=tr.find('span', {'class':'span_bp7'}).text
                            bp_8=tr.find('span', {'class':'span_bp8'}).text
                            position = tr.find('span', {'class':'position'}).find('span',{'class','txt'}).text
                            ovr = tr.find('span', {'class':'position'}).select_one('span[class*="skillData_"]').text
                            print(playerName  ,  position)
                            print(bp_1, bp_2, bp_3, bp_4, bp_5, bp_6, bp_7, bp_8)
                            row = self.TableWidget_search_result.rowCount()
                            self.TableWidget_search_result.insertRow(row)
                            item = QtWidgets.QTableWidgetItem("SEASON")   ;item.setTextAlignment(QtCore.Qt.AlignCenter); self.TableWidget_search_result.setItem( row , 0, item)
                            item = QtWidgets.QTableWidgetItem(playerName) ;item.setTextAlignment(QtCore.Qt.AlignCenter); self.TableWidget_search_result.setItem( row , 1, item)
                            item = QtWidgets.QTableWidgetItem(position)   ;item.setTextAlignment(QtCore.Qt.AlignCenter); self.TableWidget_search_result.setItem( row , 2, item)
                            item = QtWidgets.QTableWidgetItem(ovr)        ;item.setTextAlignment(QtCore.Qt.AlignCenter); self.TableWidget_search_result.setItem( row , 3, item)
                            item = QtWidgets.QTableWidgetItem(bp_1)       ;item.setTextAlignment(QtCore.Qt.AlignRight) ; self.TableWidget_search_result.setItem( row , 4, item)
                            item = QtWidgets.QTableWidgetItem(bp_2)       ;item.setTextAlignment(QtCore.Qt.AlignRight) ; self.TableWidget_search_result.setItem( row , 5, item)
                            item = QtWidgets.QTableWidgetItem(bp_3)       ;item.setTextAlignment(QtCore.Qt.AlignRight) ; self.TableWidget_search_result.setItem( row , 6, item)
                            item = QtWidgets.QTableWidgetItem(bp_4)       ;item.setTextAlignment(QtCore.Qt.AlignRight) ; self.TableWidget_search_result.setItem( row , 7, item)
                            item = QtWidgets.QTableWidgetItem(bp_5)       ;item.setTextAlignment(QtCore.Qt.AlignRight) ; self.TableWidget_search_result.setItem( row , 8, item)
                            item = QtWidgets.QTableWidgetItem(bp_6)       ;item.setTextAlignment(QtCore.Qt.AlignRight) ; self.TableWidget_search_result.setItem( row , 9, item)
                            item = QtWidgets.QTableWidgetItem(bp_7)       ;item.setTextAlignment(QtCore.Qt.AlignRight) ; self.TableWidget_search_result.setItem( row ,10, item)
                            item = QtWidgets.QTableWidgetItem(bp_8)       ;item.setTextAlignment(QtCore.Qt.AlignRight) ; self.TableWidget_search_result.setItem( row ,11, item)
                            totalCount+=totalCount
        print("##### END CRAWLER ")
        self.lcdNumber_search_total.display(totalCount)
        self.save_env()

    def save_env(self):
        data = dict()
        list_season = list(); list_league = list(); list_position = list(); list_ability = list()

        for i in range( self.ListWidget_season.count() ) :
            temp = dict()
            temp["val"] = self.ListWidget_season.item(i).data(QtCore.Qt.UserRole)
            temp["txt"] = self.ListWidget_season.item(i).text()
            list_season.append(data)
        #data["LIST_SEASON"]    = list_season
        data["LIST_LEGUE"]     = list_league
        data["LIST_POSITION"]  = list_position
        data["LIST_ABILITY"]   = list_ability
        print(data)
        with open('Environment.json','w',encoding='utf-8') as make_file:
            json.dump(data, make_file, indent="\t")
            
    def load_env(self):
        print('#')

    def get_cmm_code(self):
        code_season = REQ.getCode(groupCode = "GC00001",subGroupCode="SG00001")
        if code_season['status']:
            for item in code_season['msg']:
                nm  = item['CODE_NM']
                val = item['CODE_VALUE']
                self.ComboBox_season.addItem(nm, val)
        code_league = REQ.getCode(groupCode = "GC00001",subGroupCode="SG00002")
        if code_league['status']:
            for item in code_league['msg']:
                nm  = item['CODE_NM']
                val = item['CODE_VALUE']
                self.ComboBox_league.addItem(nm, val)
        code_bp = REQ.getCode(groupCode = "GC00001",subGroupCode="SG00004")
        if code_bp['status']:
            for item in code_bp['msg']:
                nm  = item['CODE_NM']
                val = item['CODE_VALUE']
                self.ComboBox_bp.addItem(nm, val)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    qtmodern.styles.dark(app)
    mw = qtmodern.windows.ModernWindow(MainWindow)
    mw.show()
    sys.exit(app.exec_())
